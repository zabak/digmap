package pt.utl.ist.lucene.treceval;

/**
 * @author Jorge
 * @date 24/Abr/2009
 * @time 13:23:24
 */
public class ReportResult
{
    public String num_q;
    public String num_ret;
    public String num_rel;
    public String num_rel_ret;
    public String map;
    public String gm_ap;
    public String ndcg;
    public String R_prec;
    public String bpref;
    public String recip_rank;
    public String P5;
    public String P10;
    public String P15;
    public String P20;
    public String P30;
    public String P100;
    public String P200;
    public String P500;
    public String P1000;

    public static final String[] names =
            {
                    "num_q",
                    "num_ret",
                    "num_rel",
                    "num_rel_ret",
                    "map",
                    "gm_ap",
                    "ndcg",
                    "R_prec",
                    "bpref",
                    "recip_rank",
                    "P5",
                    "P10",
                    "P15",
                    "P20",
                    "P30",
                    "P100",
                    "P200",
                    "P500",
                    "P1000"
            };

    private String[] values = null;

    public String[] getValues()
    {
        if(values == null)
        {
            values = new String[names.length];
            values[0] = num_q;
            values[1] = num_ret;
            values[2] = num_rel;
            values[3] = num_rel_ret;
            values[4] = map;
            values[5] = gm_ap;
            values[6] = ndcg;
            values[7] = R_prec;
            values[8] = bpref;
            values[9] = recip_rank;
            values[10] = P5;
            values[11] = P10;
            values[12] = P15;
            values[13] = P20;
            values[14] = P30;
            values[15] = P100;
            values[16] = P200;
            values[17] = P500;
            values[18] = P1000;
        }
        return values;
    }

    public String toString()
    {
        return num_q + " "
                + num_ret + " "
                + num_rel + " "
                + num_rel_ret + " "
                + map + " "
                + gm_ap + " "
                + ndcg + " "
                + R_prec + " "
                + bpref + " "
                + recip_rank + " "
                + P5 + " "
                + P10 + " "
                + P15 + " "
                + P20 + " "
                + P30 + " "
                + P100 + " "
                + P200 + " "
                + P500 + " "
                + P1000;
    }

    /**
     * Ingest one line to fill the result data
     *
     * @param line with one line generated by treceval
     */
    public void ingest(String line)
    {
        String[] lineElements = line.split("[ \\n\\t]+");
        ingest(lineElements);
    }

    /**
     * Ingest one line to fill the result data
     *
     * @param lineElements with one line generated by treceval
     */
    public void ingest(String[] lineElements)
    {
        if (lineElements.length == 3 && lineElements[1].equals("all"))
        {
            if (lineElements[0].equals("num_q"))
                num_q = lineElements[2].replace(",", ".");
            else if (lineElements[0].equals("num_ret"))
                num_ret = lineElements[2].replace(",", ".");
            else if (lineElements[0].equals("num_rel"))
                num_rel = lineElements[2].replace(",", ".");
            else if (lineElements[0].equals("num_rel_ret"))
                num_rel_ret = lineElements[2].replace(",", ".");
            else if (lineElements[0].equals("map"))
                map = lineElements[2].replace(",", ".");
            else if (lineElements[0].equals("gm_ap"))
                gm_ap = lineElements[2].replace(",", ".");
            else if (lineElements[0].equals("ndcg"))
                ndcg = lineElements[2].replace(",", ".");

            else if (lineElements[0].equals("R-prec"))
                R_prec = lineElements[2].replace(",", ".");
            else if (lineElements[0].equals("bpref"))
                bpref = lineElements[2].replace(",", ".");
            else if (lineElements[0].equals("recip_rank"))
                recip_rank = lineElements[2].replace(",", ".");

            else if (lineElements[0].equals("P5"))
                P5 = lineElements[2].replace(",", ".");
            else if (lineElements[0].equals("P10"))
                P10 = lineElements[2].replace(",", ".");
            else if (lineElements[0].equals("P15"))
                P15 = lineElements[2].replace(",", ".");
            else if (lineElements[0].equals("P20"))
                P20 = lineElements[2].replace(",", ".");
            else if (lineElements[0].equals("P30"))
                P30 = lineElements[2].replace(",", ".");
            else if (lineElements[0].equals("P100"))
                P100 = lineElements[2].replace(",", ".");
            else if (lineElements[0].equals("P200"))
                P200 = lineElements[2].replace(",", ".");
            else if (lineElements[0].equals("P500"))
                P500 = lineElements[2].replace(",", ".");
            else if (lineElements[0].equals("P1000"))
                P1000 = lineElements[2].replace(",", ".");
        }
    }
}
